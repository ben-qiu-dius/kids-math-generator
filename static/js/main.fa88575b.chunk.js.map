{"version":3,"sources":["components/mathDocument.js","helpers/questionGenerator.js","pages/MathPage.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["styles","StyleSheet","create","body","paddingTop","paddingBottom","flexDirection","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","header","fontWeight","pageNumber","position","bottom","left","right","color","section","marginTop","flexGrow","MathDocument","questions","size","style","page","slice","map","question","index","key","defaultProps","questionGenerator","year","mathType","result","_","times","a","randomIntFromInterval","b","push","additionGenerator","subtractionGenerator","min","max","Math","floor","random","MathPage","useParams","width","height","startCase","toLower","Home","to","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa88575b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Document, Page, Text, View, StyleSheet } from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 24,\n    textAlign: \"center\"\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 40\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12\n  },\n  text: {\n    margin: 5,\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 14,\n    textAlign: \"justify\"\n  },\n  header: {\n    fontSize: 16,\n    marginBottom: 20,\n    textAlign: \"center\",\n    fontWeight: \"heavy\"\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\"\n  },\n  section: {\n    marginTop: 20,\n    marginBottom: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    flexGrow: 2\n  }\n});\n\nconst MathDocument = ({ header, questions }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      <View style={styles.body}>\n        <Text style={styles.header}>{header}</Text>\n        <View style={styles.section}>\n          {questions.slice(0, 15).map((question, index) => (\n            <Text style={styles.text} key={index}>\n              ({index + 1}) {question}\n            </Text>\n          ))}\n        </View>\n        <View style={styles.section}>\n          {questions.slice(15, 30).map((question, index) => (\n            <Text style={styles.text} key={index}>\n              ({index + 16}) {question}\n            </Text>\n          ))}\n        </View>\n        <View style={styles.section}>\n          {questions.slice(30, 45).map((question, index) => (\n            <Text style={styles.text} key={index}>\n              ({index + 31}) {question}\n            </Text>\n          ))}\n        </View>\n      </View>\n    </Page>\n  </Document>\n);\n\nMathDocument.propTypes = {\n  header: PropTypes.string,\n  questions: PropTypes.arrayOf(PropTypes.string),\n}\n\nMathDocument.defaultProps = {\n  header: \"Math challenge\",\n  questions: [],\n}\n\nexport default MathDocument;\n","import _ from 'lodash'\n\nconst additionGenerator = ({year, size}) => {\n  const result = []\n  _.times(size, () => {\n    const a  = randomIntFromInterval(1, 19)\n    const b = randomIntFromInterval(1, (20 - a))\n    result.push(`${a} + ${b} =`)\n  })\n  return result\n}\n\nconst subtractionGenerator = ({year, size}) => {\n  const result = []\n  _.times(size, () => {\n    const a  = randomIntFromInterval(1, 19)\n    const b = randomIntFromInterval(1, a)\n    result.push(`${a} - ${b} =`)\n  })\n  return result\n}\n\nconst questionGenerator = ({year, mathType, size}) => {\n  if (mathType === 'addition') {\n    return additionGenerator({year, size})\n  }\n  if (mathType === 'subtraction') {\n    return subtractionGenerator({year, size})\n  }\n}\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport { additionGenerator, subtractionGenerator, questionGenerator }\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { PDFViewer } from '@react-pdf/renderer'\nimport _ from 'lodash'\n\nimport MathDocument from '../components/mathDocument'\nimport { questionGenerator } from '../helpers/questionGenerator'\n\nconst MathPage = () => {\n  const { year, mathType } = useParams()\n\n  return (\n    <PDFViewer width=\"100%\" style={{ height: '100vh' }}>\n      <MathDocument\n        header={_.startCase(_.toLower(mathType))}\n        questions={questionGenerator({ year, mathType, size: 45 })}\n      />\n    </PDFViewer>\n  )\n}\n\nexport default MathPage\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/grade/1/addition\">Grade 1 Addition</Link>\n        </li>\n        <li>\n          <Link to=\"/grade/1/subtraction\">Grade 1 Subtraction</Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport MathPage from './pages/MathPage'\nimport Home from './pages/Home'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/grade/:year/:mathType\">\n          <MathPage />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}